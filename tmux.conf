set -g default-terminal "screen-256color"

set -g status-position top
set -g status-fg white
set -g status-bg blue
set -g status-left ' '
set -g status-right-length 100
set -g status-right '#{b:pane_current_path} %a %H:%M %d/%m/%y #(~/.dotfiles/scripts/battery.sh) '

set -g message-style fg=white,bg=blue

set -g base-index 1
set -g pane-active-border-style fg=blue
set -g pane-base-index 1

# Set the prefix to 'ctrl + a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind '"' split-window -c    "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"
bind c   new-window   -c    "#{pane_current_path}"
bind h   split-window -c    "#{pane_current_path}"
bind v   split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

bind C-l send-keys 'C-l'
